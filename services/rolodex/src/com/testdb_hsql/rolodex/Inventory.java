/*Generated by WaveMaker Studio*/
package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Inventory generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`INVENTORY`", schema = "PUBLIC")
public class Inventory implements Serializable {

    private Integer inventoryId;
    private int filmId;
    private int storeId;
    private Store store;
    private Film film;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`INVENTORY_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getInventoryId() {
        return this.inventoryId;
    }

    public void setInventoryId(Integer inventoryId) {
        this.inventoryId = inventoryId;
    }

    @Column(name = "`FILM_ID`", nullable = false, scale = 0, precision = 10)
    public int getFilmId() {
        return this.filmId;
    }

    public void setFilmId(int filmId) {
        this.filmId = filmId;
    }

    @Column(name = "`STORE_ID`", nullable = false, scale = 0, precision = 10)
    public int getStoreId() {
        return this.storeId;
    }

    public void setStoreId(int storeId) {
        this.storeId = storeId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`STORE_ID`", referencedColumnName = "`STORE_ID`", insertable = false, updatable = false)
    public Store getStore() {
        return this.store;
    }

    public void setStore(Store store) {
        if(store != null) {
            this.storeId = store.getStoreId();
        }

        this.store = store;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`FILM_ID`", referencedColumnName = "`FILM_ID`", insertable = false, updatable = false)
    public Film getFilm() {
        return this.film;
    }

    public void setFilm(Film film) {
        if(film != null) {
            this.filmId = film.getFilmId();
        }

        this.film = film;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Inventory)) return false;
        final Inventory inventory = (Inventory) o;
        return Objects.equals(getInventoryId(), inventory.getInventoryId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getInventoryId());
    }
}

